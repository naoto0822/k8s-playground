// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: src/processor.proto

package processorpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	types "github.com/naoto0822/k8s-playground/proto/go/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetRamenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRamenRequest) Reset() {
	*x = GetRamenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_processor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRamenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRamenRequest) ProtoMessage() {}

func (x *GetRamenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_processor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRamenRequest.ProtoReflect.Descriptor instead.
func (*GetRamenRequest) Descriptor() ([]byte, []int) {
	return file_src_processor_proto_rawDescGZIP(), []int{0}
}

type GetRamenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ramens []*types.Ramen `protobuf:"bytes,1,rep,name=Ramens,proto3" json:"Ramens,omitempty"`
}

func (x *GetRamenResponse) Reset() {
	*x = GetRamenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_processor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRamenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRamenResponse) ProtoMessage() {}

func (x *GetRamenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_processor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRamenResponse.ProtoReflect.Descriptor instead.
func (*GetRamenResponse) Descriptor() ([]byte, []int) {
	return file_src_processor_proto_rawDescGZIP(), []int{1}
}

func (x *GetRamenResponse) GetRamens() []*types.Ramen {
	if x != nil {
		return x.Ramens
	}
	return nil
}

var File_src_processor_proto protoreflect.FileDescriptor

var file_src_processor_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x70, 0x62, 0x1a, 0x0f, 0x73, 0x72, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6d,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x52, 0x61,
	0x6d, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x52, 0x06, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x73,
	0x32, 0x5e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x61, 0x6f, 0x74, 0x6f, 0x30, 0x38, 0x32, 0x32, 0x2f, 0x6b, 0x38, 0x73, 0x2d, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_processor_proto_rawDescOnce sync.Once
	file_src_processor_proto_rawDescData = file_src_processor_proto_rawDesc
)

func file_src_processor_proto_rawDescGZIP() []byte {
	file_src_processor_proto_rawDescOnce.Do(func() {
		file_src_processor_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_processor_proto_rawDescData)
	})
	return file_src_processor_proto_rawDescData
}

var file_src_processor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_processor_proto_goTypes = []interface{}{
	(*GetRamenRequest)(nil),  // 0: processorpb.GetRamenRequest
	(*GetRamenResponse)(nil), // 1: processorpb.GetRamenResponse
	(*types.Ramen)(nil),      // 2: types.Ramen
}
var file_src_processor_proto_depIdxs = []int32{
	2, // 0: processorpb.GetRamenResponse.Ramens:type_name -> types.Ramen
	0, // 1: processorpb.ProcessorSerice.GetRamenList:input_type -> processorpb.GetRamenRequest
	1, // 2: processorpb.ProcessorSerice.GetRamenList:output_type -> processorpb.GetRamenResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_src_processor_proto_init() }
func file_src_processor_proto_init() {
	if File_src_processor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_processor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRamenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_processor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRamenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_processor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_processor_proto_goTypes,
		DependencyIndexes: file_src_processor_proto_depIdxs,
		MessageInfos:      file_src_processor_proto_msgTypes,
	}.Build()
	File_src_processor_proto = out.File
	file_src_processor_proto_rawDesc = nil
	file_src_processor_proto_goTypes = nil
	file_src_processor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProcessorSericeClient is the client API for ProcessorSerice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessorSericeClient interface {
	GetRamenList(ctx context.Context, in *GetRamenRequest, opts ...grpc.CallOption) (*GetRamenResponse, error)
}

type processorSericeClient struct {
	cc grpc.ClientConnInterface
}

func NewProcessorSericeClient(cc grpc.ClientConnInterface) ProcessorSericeClient {
	return &processorSericeClient{cc}
}

func (c *processorSericeClient) GetRamenList(ctx context.Context, in *GetRamenRequest, opts ...grpc.CallOption) (*GetRamenResponse, error) {
	out := new(GetRamenResponse)
	err := c.cc.Invoke(ctx, "/processorpb.ProcessorSerice/GetRamenList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessorSericeServer is the server API for ProcessorSerice service.
type ProcessorSericeServer interface {
	GetRamenList(context.Context, *GetRamenRequest) (*GetRamenResponse, error)
}

// UnimplementedProcessorSericeServer can be embedded to have forward compatible implementations.
type UnimplementedProcessorSericeServer struct {
}

func (*UnimplementedProcessorSericeServer) GetRamenList(context.Context, *GetRamenRequest) (*GetRamenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRamenList not implemented")
}

func RegisterProcessorSericeServer(s *grpc.Server, srv ProcessorSericeServer) {
	s.RegisterService(&_ProcessorSerice_serviceDesc, srv)
}

func _ProcessorSerice_GetRamenList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRamenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorSericeServer).GetRamenList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processorpb.ProcessorSerice/GetRamenList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorSericeServer).GetRamenList(ctx, req.(*GetRamenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProcessorSerice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "processorpb.ProcessorSerice",
	HandlerType: (*ProcessorSericeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRamenList",
			Handler:    _ProcessorSerice_GetRamenList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/processor.proto",
}
